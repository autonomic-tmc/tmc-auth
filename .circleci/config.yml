# Java Maven CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-java/ for more details
#
version: 2.1

executors:
  java-image:
    working_directory: ~/repo
    environment:
      JAVA_TOOL_OPTIONS: -Xmx1024m
    docker:
      - image: docker.cloudsmith.io/autonomic/public-images/java
        auth:
          username: ${CS_PUBLIC_USERNAME}
          password: ${CS_PUBLIC_API_TOKEN}
  sonar-image:
    working_directory: ~/repo
    environment:
      LANGUAGE: JAVA
      JAVA_TOOL_OPTIONS: -Xmx1024m
    docker:
      - image: docker.cloudsmith.io/autonomic/private-images/sonar
        auth:
          username: ${CS_PRIVATE_USERNAME}
          password: ${CS_PRIVATE_API_TOKEN}
  gitleaks-image:
    working_directory: ~/repo
    docker:
      - image: docker.cloudsmith.io/autonomic/private-images/gitleaks
        auth:
          username: ${CS_PRIVATE_USERNAME}
          password: ${CS_PRIVATE_API_TOKEN}

jobs:
  scan_secrets:
    executor: gitleaks-image
    steps:
      - checkout
      - run: gitleaks

  build:
    executor: java-image
    steps:
      - checkout

      - run: mvn clean
      - run:
          command: |
            cd ~/repo/examples/gradle-example
            ./gradlew clean
      # Download and cache dependencies
      - restore_cache:
          keys:
            - v3-dependencies-{{ checksum "pom.xml" }}-{{ checksum "examples/maven-example/pom.xml" }}-{{ checksum "examples/gradle-example/build.gradle" }}
      - run:
          name: maven install
          command: |
            cd ~/repo
            mvn install dependency:go-offline -DprocessAllModules -DskipTests
      - run:
          name: gradle build
          command: |
            cd ~/repo/examples/gradle-example
            ./gradlew build -x test
      - persist_to_workspace:
          root: /root
          paths:
            - repo
            - .m2
            - .gradle

      - save_cache:
          paths:
            - ~/.m2
            - ~/.gradle
          key: v3-dependencies-{{ checksum "pom.xml" }}-{{ checksum "examples/maven-example/pom.xml" }}-{{ checksum "examples/gradle-example/build.gradle" }}

  test:
    executor: java-image
    steps:
      - attach_workspace:
          at: /root

      - run:
          name: Run tmc-auth test suite
          command: mvn verify -Pintegration-tests

      - run:
          name: Save test results
          command: |
            mkdir -p ~/test-output
            cp -fr target/surefire-reports ~/test-output
            cp -fr target/site/jacoco ~/test-output
          when: always

      - run:
          name: Run maven example test
          command: |
            cd ~/repo/examples/maven-example
            export M2_HOME=$MAVEN_CONFIG
            export MAVEN_CONFIG=
            mvn test

      - run:
          name: Run gradle example test
          command: |
            cd ~/repo/examples/gradle-example
            ./gradlew test

      - store_test_results:
          path: ~/test-output
      - store_artifacts:
          path: ~/test-output

      - persist_to_workspace:
          root: /root
          paths:
            - repo

  examples:
    executor: java-image
    steps:
      - attach_workspace:
          at: /root
      - run:
          name: Run Maven Example
          # M2_HOME so mvn can leverage the cache
          # unset MAVEN_CONFIG so that mvn will not error
          command: |
            cd ~/repo/examples/maven-example
            export M2_HOME=$MAVEN_CONFIG
            export MAVEN_CONFIG=
            ./run.sh LOCAL-SNAPSHOT
      - run:
          name: Run Gradle Example
          command: |
            cd ~/repo/examples/gradle-example
            ./run.sh LOCAL-SNAPSHOT

  sonar:
    executor: sonar-image
    steps:
      - attach_workspace:
          at: /root
      - run:
          name: Analyze on SonarCloud
          command: /root/sonar.sh

  #publish artifact to OSS repo
  publish-public:
    executor: java-image
    steps:
      - checkout
      - restore_cache:
          keys:
            - v3-publish-dependencies-{{ checksum "pom.xml" }}
      - run: mvn versions:set -DnewVersion=${CIRCLE_TAG}
      - run: mvn deploy -Prun-revapi,public

  dependency-track:
    executor: java-image
    steps:
      - attach_workspace:
          at: /root
      - run:
          name: Upload to Dependency Track
          command: mvn validate -Pdependency-track

workflows:
  version: 2.1
  build_and_test:
    jobs:
      - scan_secrets:
          context: tmc-cloudsmith-context
      - build:
          requires:
            - scan_secrets
          context: tmc-cloudsmith-context
      - test:
          requires:
            - build
          context:
          - tmc-oss-context
          - tmc-cloudsmith-context
      - examples:
          requires:
            - build
          context:
            - tmc-oss-context
            - tmc-cloudsmith-context
      - sonar:
          requires:
            - test
          context:
            - tmc-oss-context
            - tmc-cloudsmith-context
      - dependency-track:
          filters:
            branches:
              only: releases/2.x
          requires:
            - sonar
          context:
            - tmc-oss-context
            - tmc-cloudsmith-context

  release:
    jobs:
      #Run Publish on GitHub release
      - publish-public:
          context: tmc-cloudsmith-context
          filters:
            tags:
              only: /.*/
            branches:
              ignore: /.*/
      #Run dependency track on GitHub release
      - dependency-track:
          context:
            - tmc-oss-context
            - tmc-cloudsmith-context
          filters:
            tags:
              only: /.*/
            branches:
              ignore: /.*/
